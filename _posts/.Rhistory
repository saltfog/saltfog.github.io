library(RColorBrewer)
library(RCurl)
library(htmltools)
m <- getURL('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.csv')
class(m)
m <- read.csv(textConnection(m), header=T)
mapp <- renderLeaflet({
leaflet(m) %>% addTiles() %>% addCircles(~longitude, ~latitude, ~10^mag*5, color = "blue", group = "Quakes", popup = ~as.character(mag)) %>%
addPolygons(data = outline, lng = ~longitude, lat = ~latitude,
fill = F, weight = 2, color = "white", group = "Outline") %>%
fitBounds(~min(longitude), ~min(latitude), ~max(longitude), ~max(latitude))
}
mapp
library(shiny)
library(leaflet)
library(RColorBrewer)
library(RCurl)
library(htmltools)
m <- getURL('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.csv')
class(m)
m <- read.csv(textConnection(m), header=T)
mapp <- renderLeaflet({
leaflet(m) %>% addTiles() %>% addCircles(~longitude, ~latitude, ~10^mag*5, color = "blue", group = "Quakes", popup = ~as.character(mag)) %>%
addPolygons(data = outline, lng = ~longitude, lat = ~latitude,
fill = F, weight = 2, color = "white", group = "Outline") %>%
fitBounds(~min(longitude), ~min(latitude), ~max(longitude), ~max(latitude))
})
mapp
library(shiny)
library(leaflet)
library(RColorBrewer)
library(RCurl)
library(htmltools)
m <- getURL('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.csv')
class(m)
m <- read.csv(textConnection(m), header=T)
#  outline <- m[chull(m$longitude, m$latitude),]
#  output$map <- renderLeaflet({
#    leaflet(m) %>% addTiles() %>% addCircles(~longitude, ~latitude, ~10^mag*5, color = "blue", group = "Quakes", popup = ~as.character(mag)) %>%
#addPopups(~longitude, ~latitude, ~as.character(mag)) %>%
#     addPolygons(data = outline, lng = ~longitude, lat = ~latitude,
#                fill = F, weight = 2, color = "white", group = "Outline") %>%
#   fitBounds(~min(longitude), ~min(latitude), ~max(longitude), ~max(latitude)) %>%
library(leaflet)
m <- leaflet() %>% setView(lng=-122.0840263, lat=37.4219806, zoom=11)
m %>% addTiles() %>% addMarkers(lng=-122.0840263, lat=37.4219806, popup="The Googlepex")
library(shiny)
library(leaflet)
library(RColorBrewer)
library(RCurl)
library(htmltools)
m <- getURL('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.csv')
class(m)
m <- read.csv(textConnection(m), header=T)
outline <- m[chull(m$longitude, m$latitude),]
m <- renderLeaflet({
leaflet(m) %>% addTiles() %>% addCircles(~longitude, ~latitude, ~10^mag*5, color = "blue", group = "Quakes", popup = ~as.character(mag)) %>%
addPopups(~longitude, ~latitude, ~as.character(mag)) %>%
addPolygons(data = outline, lng = ~longitude, lat = ~latitude,
fill = F, weight = 2, color = "white", group = "Outline") %>%
fitBounds(~min(longitude), ~min(latitude), ~max(longitude), ~max(latitude))
})
m
library(leaflet)
m <- leaflet() %>% setView(lng=-122.0840263, lat=37.4219806, zoom=11)
m %>% addTiles() %>% addMarkers(lng=-122.0840263, lat=37.4219806, popup="The Googlepex")
library(shiny)
library(leaflet)
library(RColorBrewer)
library(RCurl)
library(htmltools)
m <- getURL('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.csv')
class(m)
m <- read.csv(textConnection(m), header=T)
outline <- m[chull(m$longitude, m$latitude),]
m <- renderLeaflet({
leaflet(m) %>% addTiles() %>% addCircles(~longitude, ~latitude, ~10^mag*5, color = "blue", group = "Quakes", popup = ~as.character(mag)) %>%
addPopups(~longitude, ~latitude, ~as.character(mag)) %>%
addPolygons(data = outline, lng = ~longitude, lat = ~latitude,
fill = F, weight = 2, color = "white", group = "Outline") %>%
fitBounds(~min(longitude), ~min(latitude), ~max(longitude), ~max(latitude))
})
m
library(leaflet)
m <- leaflet() %>% setView(lng=-122.0840263, lat=37.4219806, zoom=11)
m %>% addTiles() %>% addMarkers(lng=-122.0840263, lat=37.4219806, popup="The Googlepex")
library(leaflet)
m <- leaflet() %>% setView(lng=-122.0840263, lat=37.4219806, zoom=11)
m %>% addCircles(lng=-122.0840263, lat=37.4219806, color = blue)
library(leaflet)
m <- leaflet() %>% setView(lng=-122.0840263, lat=37.4219806, zoom=11)
m %>% addCircles(lng=-122.0840263, lat=37.4219806, color = blue)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
m <- leaflet() %>% setView(lng=41.227578, lat=-111.971505, zoom=11)
m %>% addTiles() %>% addMarkers(lng=41.227578, lat=-111.971505, popup="The House of the Lord (Ogden Temple")
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=11)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple")
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=20)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple")
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=11)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple")
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=15)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple")
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=20)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple")
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=19)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple")
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=15)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple")
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
m <- leaflet() %>% setView(lng=-111.971505, lat=41.227578, zoom=15)
m %>% addTiles() %>% addMarkers(lng=-111.971505, lat=41.227578, popup="The House of the Lord (Ogden Temple)")
unlink('2018-01-14-Leaflet_cache', recursive = TRUE)
library("data.table")
library(ggplot2)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
unzip("repdata%2Fdata%2Factivity.zip",exdir = "data")
activityDT <- data.table::fread(input = "data/activity.csv")
Total_Steps <- actDT[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
dt <- data.table::fread(input = "data/activity.csv")
Total_Steps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
head(Total_Steps, 10)
ggplot(Total_Steps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
ggplot(Total_Steps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
Total_Steps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
head(Total_Steps, 10)
Total_Steps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
head(Total_Steps, 10)
summary(Total_Steps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
head(totalSteps, 10)
summary(totalSteps)
ggplot(Total_Steps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
head(totalSteps, 10)
summary(totalSteps)
totalSteps <- data.table::fread(input = "data/activity.csv")
totalSteps <- data.table::fread(input = "data/activity.csv")
ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
dt <- data.table::fread(input = "data/activity.csv")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 10000) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 100) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Frequency")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
library("data.table")
library(ggplot2)
library(plotly)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
unzip("repdata%2Fdata%2Factivity.zip",exdir = "data")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g = g + ggplot(totalSteps, aes(x = steps)) +
g = g + geom_histogram(fill = "tomato3", binwidth = 1000) +
g = g + labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
library("data.table")
library(ggplot2)
library(plotly)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
unzip("repdata%2Fdata%2Factivity.zip",exdir = "data")
dt <- data.table::fread(input = "data/activity.csv")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g = g + ggplot(totalSteps, aes(x = steps)) +
g = g + geom_histogram(fill = "tomato3", binwidth = 1000) +
g = g + labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g = ggplot(totalSteps, aes(x = steps)) +
g = g + geom_histogram(fill = "tomato3", binwidth = 1000) +
g = g + labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
g = g + geom_histogram(fill = "tomato3", binwidth = 1000) +
g = g + labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
g + geom_histogram(fill = "tomato3", binwidth = 1000) +
g + labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
g = plot_ly(g)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
g
g = plot_ly(g)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Number of Steps/Day")
g
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Freq")
g
dt <- nrow(dt$steps)
nrow(dt$steps)
library("data.table")
library(ggplot2)
library(plotly)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
library("data.table")
library(ggplot2)
library(plotly)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
library("data.table")
library(ggplot2)
library(plotly)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
unzip("repdata%2Fdata%2Factivity.zip",exdir = "data")
dt <- data.table::fread(input = "data/activity.csv")
sum(dt)
sum(dt$steps)
sum[c("steps")]
sum["steps"]
sum(dt$steps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
totalSteps
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Freq")
g
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
sum(totalSteps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
sum([,2])
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
sum(totalSteps$steps)
sum(totalSteps$steps, NA)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
type(totalSteps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
class(totalSteps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
class(totalSteps)
table(totalSteps$steps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
class(totalSteps)
table(sum(totalSteps$steps))
dt <- data.table::fread(input = "data/activity.csv")
library("data.table")
library(ggplot2)
library(plotly)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
unzip("repdata%2Fdata%2Factivity.zip",exdir = "data")
dt <- data.table::fread(input = "data/activity.csv")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
sumSteps <- table(dt$steps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
sumSteps <- table(dt$steps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
sumSteps <- table(dt$steps)
cbind(sumSteps, Total = rowSums(sumSteps))
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
summary(totalSteps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
sum(totalSteps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
count(totalSteps)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps")]
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Freq")
g
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Freq")
g
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
dt <- data.table::fread(input = "data/activity.csv")
sum(dt$steps)
table(dt)
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
table(sum(dt))
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
totalSteps[, .(meanSteps = mean(steps, na.rm = TRUE), medianSteps = median(steps, na.rm = TRUE))]
totalSteps[, .colSums(= sum(steps, na.rm = TRUE)) .(meanSteps = mean(steps, na.rm = TRUE), medianSteps = median(steps, na.rm = TRUE))]
totalSteps[, .colSums(= sum(steps, na.rm = TRUE), .(meanSteps = mean(steps, na.rm = TRUE), medianSteps = median(steps, na.rm = TRUE))]
totalSteps[, .(colSums = sum(steps, na.rm = TRUE), .(meanSteps = mean(steps, na.rm = TRUE), medianSteps = median(steps, na.rm = TRUE))]
totalSteps[, .(sumSteps = sum(steps, na.rm = TRUE), .(meanSteps = mean(steps, na.rm = TRUE), medianSteps = median(steps, na.rm = TRUE))]
totalSteps[, .(meanSteps = mean(steps, na.rm = TRUE), sumSteps = sum(steps, na.rm = TRUE), mediaSteps = median(steps, na.rm = TRUE))]
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
totalSteps[sumSteps = sum(steps, na.rm = TRUE)]
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
totalSteps[, .(sumSteps = sum(steps, na.rm = TRUE))]
totalSteps[, .(meanSteps = mean(steps, na.rm = TRUE),  mediaSteps = median(steps, na.rm = TRUE))]
IntervalDT <- totalSteps[, c(lapply(.SD, mean, na.rm = TRUE)), .SDcols = c("steps"), by = .(interval)]
library("data.table")
library(ggplot2)
library(plotly)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = paste0(getwd(), '/repdata%2Fdata%2Factivity.zip'), method = "curl")
unzip("repdata%2Fdata%2Factivity.zip",exdir = "data")
dt <- data.table::fread(input = "data/activity.csv")
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
totalSteps[, .(sumSteps = sum(steps, na.rm = TRUE))]
totalSteps <- dt[, c(lapply(.SD, sum, na.rm = FALSE)), .SDcols = c("steps"), by = .(date)]
g <- ggplot(totalSteps, aes(x = steps)) +
geom_histogram(fill = "tomato3", binwidth = 1000) +
labs(title = "Daily Steps", x = "Steps", y = "Freq")
g
totalSteps[, .(meanSteps = mean(steps, na.rm = TRUE),  mediaSteps = median(steps, na.rm = TRUE))]
dt$interval <- totalSteps[, c(lapply(.SD, mean, na.rm = TRUE)), .SDcols = c("steps"), by = .(interval)]
dt <- totalSteps[, c(lapply(.SD, mean, na.rm = TRUE)), .SDcols = c("steps"), by = .(interval)]
dt <- totalSteps[, c(lapply(.SD, mean, na.rm = TRUE)), .SDcols = c("steps"), by = .(interval)]
interval <- dt[, c(lapply(.SD, mean, na.rm = TRUE)), .SDcols = c("steps"), by = .(interval)]
ggplot(dt, aes(x = interval , y = steps)) + geom_line(color="blue", size=1) + labs(title = "Avg. Daily Steps", x = "Interval", y = "Avg. Steps per day")
# total number of steps taken per day
Total_Steps <- dt[, c(lapply(.SD, sum)), .SDcols = c("steps"), by = .(date)]
# mean and median total number of steps taken per day
Total_Steps[, .(Mean_Steps = mean(steps), Median_Steps = median(steps))]
# total number of steps taken per day
Total_Steps <- dt[, c(lapply(.SD, sum)), .SDcols = c("steps"), by = .(date)]
# mean and median total number of steps taken per day
Total_Steps[, .(Mean_Steps = mean(steps), Median_Steps = median(steps))]
ggplot(Total_Steps, aes(x = steps)) + geom_histogram(fill = "blue", binwidth = 1000) + labs(title = "Daily Steps", x = "Steps", y = "Frequency")
# Just recreating dt from scratch then making the new factor variable.
dt <- data.table::fread(input = "data/activity.csv")
dt[, date := as.POSIXct(date, format = "%Y-%m-%d")]
dt[, `Day of Week`:= weekdays(x = date)]
dt[grepl(pattern = "Monday|Tuesday|Wednesday|Thursday|Friday", x = `Day of Week`), "weekday or weekend"] <- "weekday"
dt[grepl(pattern = "Saturday|Sunday", x = `Day of Week`), "weekday or weekend"] <- "weekend"
dt[, `weekday or weekend` := as.factor(`weekday or weekend`)]
head(dt
# Just recreating dt from scratch then making the new factor variable.
dt <- data.table::fread(input = "data/activity.csv")
dt[, date := as.POSIXct(date, format = "%Y-%m-%d")]
dt[, `Day of Week`:= weekdays(x = date)]
dt[grepl(pattern = "Monday|Tuesday|Wednesday|Thursday|Friday", x = `Day of Week`), "weekday or weekend"] <- "weekday"
dt[grepl(pattern = "Saturday|Sunday", x = `Day of Week`), "weekday or weekend"] <- "weekend"
dt[, `weekday or weekend` := as.factor(`weekday or weekend`)]
head(dt)
activityDT[is.na(steps), "steps"] <- activityDT[, c(lapply(.SD, median, na.rm = TRUE)), .SDcols = c("steps")]
dt[is.na(steps), "steps"] <- dt[, c(lapply(.SD, median, na.rm = TRUE)), .SDcols = c("steps")]
interval <- dt[, c(lapply(.SD, mean, na.rm = TRUE)), .SDcols = c("steps"), by = .(interval, `weekday or weekend`)]
ggplot(interval , aes(x = interval , y = steps, color=`weekday or weekend`)) + geom_line() + labs(title = "Avg. Daily Steps by Weektype", x = "Interval", y = "No. of Steps") + facet_wrap(~`weekday or weekend` , ncol = 1, nrow=2)
data(anscombe)
data(anscombe)
summary(anscombe)
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggplot2)
library(dplyr)
library(reshape2)
data(anscombe)
anscombe
data(anscombe)
anscombe
A=select(anscombe, x=x1,y=y1)
B=select(anscombe, x=x2,y=y2)
C=select(anscombe, x=x3,y=y3)
D=select(anscombe, x=x4,y=y4)
A$group ='A'
B$group ='B'
C$group ='C'
D$group ='D'
head(setA,4)  # showing sample data points from setA
A$group ='A'
B$group ='B'
C$group ='C'
D$group ='D'
head(a,4)  # showing sample data points from A
A$group ='A'
B$group ='B'
C$group ='C'
D$group ='D'
head(A,4)  # showing sample data points from A
A=select(anscombe, x=x1,y=y1)
B=select(anscombe, x=x2,y=y2)
C=select(anscombe, x=x3,y=y3)
D=select(anscombe, x=x4,y=y4)
all_data=rbind(A,B,C,D)  # merging all the four data sets
all_data[c(1,13,23,43),]  # showing sample
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "blue", fill = "orange", size = 3)+
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
alldata=rbind(A,B,C,D)  # merging all the four data sets
alldata[c(1,13,23,43),]  # showing sample
summaryStats =alldata%>%group_by(group)%>%summarize("Mean X"=mean(x),
"Sample Variance X"=var(x),
"Mean Y"=round(mean(y),2),
"Sample Variance Y"=round(var(y),1),
'Correlation between X and Y '=round(cor(x,y),2)
)
A$group ='A'
B$group ='B'
C$group ='C'
D$group ='D'
head(A,4)  # showing sample data points from A
alldata=rbind(A,B,C,D)  # merging all the four data sets
alldata[c(1,13,23,43),]  # showing sample
summaryStats =alldata%>%group_by(group)%>%summarize("Mean X"=mean(x),
"Sample Variance X"=var(x),
"Mean Y"=round(mean(y),2),
"Sample Variance Y"=round(var(y),1),
'Correlation between X and Y '=round(cor(x,y),2)
)
models = alldata %>%
group_by(group) %>%
do(mod = lm(y ~ x, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = round(coef(.$mod),2),
group = .$group)) %>%
dcast(., group~var, value.var = "coef")
summaryStats_and_linear_fit = cbind(summaryStats, data_frame("Linear Regression" =
paste0("Y = ",models$"(Intercept)"," + ",models$x,"X")))
summaryStats_and_linear_fit
summaryStats =alldata%>%group_by(group)%>%summarize("Mean X"=mean(x),
"Sample Variance X"=var(x),
"Mean Y"=round(mean(y),2),
"Sample Variance Y"=round(var(y),1),
'Correlation between X and Y '=round(cor(x,y),2)
)
models = alldata %>%
group_by(group) %>%
do(mod = lm(y ~ x, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = round(coef(.$mod),2),
group = .$group)) %>%
dcast(., group~var, value.var = "coef")
summaryStats_and_linear_fit = cbind(summaryStats, data_frame("Linear Regression" =
paste0("Y = ",models$"(Intercept)"," + ",models$x,"X")))
summaryStats_and_linear_fit
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "blue", fill = "orange", size = 3)+
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "blue", fill = "tomato3", size = 3)+
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "black", fill = "blue", size = 2, alpha = .2)+
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "black", fill = "blue", size = 2, alpha = 0.03)+
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "black", fill = "blue", size = 2, alpha = 0.8) +
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "black", fill = "grey", size = 2, alpha = 0.8) +
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
ggplot(alldata, aes(x = x,y = y)) + geom_point(shape = 21, colour = "black", fill = "grey", size = 3, alpha = 0.8) +
ggtitle("Anscombe's Data Sets")+ geom_smooth(method = "lm", se = FALSE, color='blue') +
facet_wrap(~group, scales="free")
summaryStats =alldata%>%group_by(group)%>%summarize("Mean X"=mean(x),
"Sample Variance X"=var(x),
"Mean Y"=round(mean(y),2),
"Sample Variance Y"=round(var(y),1),
'Correlation between X and Y '=round(cor(x,y),2)
)
models = alldata %>%
group_by(group) %>%
do(mod = lm(y ~ x, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = round(coef(.$mod),2),
group = .$group)) %>%
dcast(., group~var, value.var = "coef")
summaryStats_and_linear_fit = cbind(summaryStats, data_frame("Linear Regression" =
paste0("Y = ",models$"(Intercept)"," + ",models$x,"X")))
summaryStats_and_linear_fit
library(ggplot2)
library(dplyr)
library(reshape2)
data(anscombe)
anscombe
setwd("~/Documents/GitHub/saltfog.github.io/_posts")
unlink('2018-01-13-The-Importance-of-Data-Visualization_cache', recursive = TRUE)
